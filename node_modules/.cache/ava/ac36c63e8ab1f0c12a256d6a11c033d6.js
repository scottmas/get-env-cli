'use strict';

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

const test = require('ava');
const execa = require('execa');
const env = require('get-env')();

test((() => {
  var _ref = _asyncToGenerator(function* (t) {
    t.equal(execa('./cli.js', ['--assert noop'], { cwd: __dirname }), env);
    //t.notThrows(execa('./cli.js', ['node_modules'], {cwd: __dirname}));
  });

  return function (_x) {
    return _ref.apply(this, arguments);
  };
})());
//# sourceMappingURL=node_modules/.cache/ava/ac36c63e8ab1f0c12a256d6a11c033d6.js.map